name: Build & publish images
on:
  push:
    branches: [ "main" ]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dir: ./glnexus-bcftools
            image: ghcr.io/${{ github.actor }}/glnexus-bcftools
          - dir: ./minimap2-samtools
            image: ghcr.io/${{ github.actor }}/minimap2-samtools
          - dir: ./rnana
            image: ghcr.io/${{ github.actor }}/rnana
          - dir: ./rnana2
            image: ghcr.io/${{ github.actor }}/rnana2
          - dir: ./varcall
            image: ghcr.io/${{ github.actor }}/varcall
          - dir: ./align
            image: ghcr.io/${{ github.actor }}/align
          - dir: ./notebooks
            image: ghcr.io/${{ github.actor }}/notebooks
          - dir: ./mash
            image: ghcr.io/${{ github.actor }}/mash
          - dir: ./hampcr
            image: ghcr.io/${{ github.actor }}/hampcr
          - dir: ./graf
            image: ghcr.io/${{ github.actor }}/graf
          - dir: ./dysgu
            image: ghcr.io/${{ github.actor }}/dysgu
          - dir: ./lifton
            image: ghcr.io/${{ github.actor }}/lifton
          - dir: ./annotation
            image: ghcr.io/${{ github.actor }}/annotation
          - dir: ./acanthophis-qc
            image: ghcr.io/${{ github.actor }}/acanthophis-qc
          - dir: ./acanthophis-diamond
            image: ghcr.io/${{ github.actor }}/acanthophis-diamond
          - dir: ./acanthophis-taxonid
            image: ghcr.io/${{ github.actor }}/acanthophis-taxonid
          - dir: ./acanthophis-plass
            image: ghcr.io/${{ github.actor }}/acanthophis-plass
          - dir: ./kaddy
            image: ghcr.io/${{ github.actor }}/kaddy
          - dir: ./shovill
            image: ghcr.io/${{ github.actor }}/shovill
          - dir: ./goleft
            image: ghcr.io/${{ github.actor }}/goleft
          - dir: ./prodigal
            image: ghcr.io/${{ github.actor }}/prodigal
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      #- name: Install cosign
      #  uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
      #  with:
      #    cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        id: build-and-push
        with:
          context: ${{ matrix.dir }}
          file: ${{ matrix.dir }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ github.actor }}/${{ steps.meta.outputs.tags }}
          cache-to: type=inline

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      # - name: Sign the published Docker image
      #   env:
      #     # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      #     TAGS: ${{ steps.meta.outputs.tags }}
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #   # This step uses the identity token to provision an ephemeral certificate
      #   # against the sigstore community Fulcio instance.
      #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
